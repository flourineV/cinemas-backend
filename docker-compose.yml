services:
  # API Gateway
  api-gateway:
    build:
      context: ./services/cinema-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=your-super-secret-jwt-key-for-auth-service
      - AUTH_SERVICE_URL=http://auth-service:3001
      - CATALOG_SERVICE_URL=http://catalog-service:3002
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5173
      - REQUEST_TIMEOUT_MS=8000
    depends_on:
      - auth-service
      - catalog-service
    networks:
      - cinema-network

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - SERVICE_NAME=auth-service
      - DB_URI=mongodb://mongo:27017/cinemas_auth
      - JWT_SECRET=your-super-secret-jwt-key-for-auth-service
      - JWT_EXPIRES_IN=7d
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
    depends_on:
      - mongo
    networks:
      - cinema-network

  # Catalog Service
  catalog-service:
    build:
      context: ./services/catalog-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - SERVICE_NAME=catalog-service
      - DB_URI=mongodb://mongo:27017/cinemas_catalog
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
    depends_on:
      - mongo
    networks:
      - cinema-network

  # MongoDB Database
  mongo:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=cinemas
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - cinema-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - cinema-network

volumes:
  mongo-data:
  redis-data:

networks:
  cinema-network:
    driver: bridge
